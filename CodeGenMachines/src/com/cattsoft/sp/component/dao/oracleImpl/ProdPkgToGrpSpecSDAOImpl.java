package com.cattsoft.sp.component.dao.oracleImpl;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import java.util.ArrayList;import org.apache.log4j.Logger;import com.cattsoft.pub.connection.ConnectionFactory;import com.cattsoft.sp.component.dao.IProdPkgToGrpSpecSDAO;import com.cattsoft.sp.vo.ProdPkgToGrpSpecSVO;import com.cattsoft.pub.util.JdbcUtil;import com.cattsoft.pub.dao.Sql;import com.cattsoft.pub.exception.AppException;import com.cattsoft.pub.exception.SysException;import com.cattsoft.pub.vo.GenericVO;import com.cattsoft.pub.util.StringUtil; /**   * 方法ProdPkgToGrpSpecSDAOImpl   * <p>Company: 大唐软件</p>   * @author ：白小亮。   * @version 1.1  2007-9-23  */public class ProdPkgToGrpSpecSDAOImpl implements IProdPkgToGrpSpecSDAO{    private static Logger log = Logger.getLogger(ProdPkgToGrpSpecSDAOImpl.class);    private static final String UNABLE_STS = "P";  /**   * 增加。   * @return String  */ public void add(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     ProdPkgToGrpSpecSVO prodPkgToGrpSpec=(ProdPkgToGrpSpecSVO) vo;    if (StringUtil.isBlank(prodPkgToGrpSpec.getPkgGrpRelaId())) {       throw new AppException("100002", "缺少对象的主键！");      }      Connection conn = null;      PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO PROD_PKG_TO_GRP_SPEC(GROUP_SPEC_ID,PKG_GRP_RELA_ID,PROD_PACKAGE_ID,STS,STS_DATE)");sql.append(" VALUES (:groupSpecId,:pkgGrpRelaId,:prodPackageId,:sts,:stsDate)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());      if (StringUtil.isBlank(prodPkgToGrpSpec.getGroupSpecId())) {      sql.setNullLong("groupSpecId");     } else {    sql.setLong("groupSpecId", prodPkgToGrpSpec.getGroupSpecId());    }       if (StringUtil.isBlank(prodPkgToGrpSpec.getPkgGrpRelaId())) {      sql.setNullLong("pkgGrpRelaId");     } else {    sql.setLong("pkgGrpRelaId", prodPkgToGrpSpec.getPkgGrpRelaId());    }       if (StringUtil.isBlank(prodPkgToGrpSpec.getProdPackageId())) {      sql.setNullLong("prodPackageId");     } else {    sql.setLong("prodPackageId", prodPkgToGrpSpec.getProdPackageId());    }       if (StringUtil.isBlank(prodPkgToGrpSpec.getSts())) {      sql.setNullString("sts");     } else {    sql.setString("sts", prodPkgToGrpSpec.getSts());    }    if (prodPkgToGrpSpec.getStsDate() == null) {      sql.setNullDate("stsDate");     } else {    sql.setTimestamp("stsDate", prodPkgToGrpSpec.getStsDate());    }            sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 主键查询的SQL。   * @return String ： 主键查询的SQL。  */ public GenericVO findByPK(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     ProdPkgToGrpSpecSVO prodPkgToGrpSpec=(ProdPkgToGrpSpecSVO) vo;    if (StringUtil.isBlank(prodPkgToGrpSpec.getPkgGrpRelaId())) {       throw new AppException("100002", "缺少对象的主键！");      }       Sql sql = new Sql("SELECT GROUP_SPEC_ID,PKG_GRP_RELA_ID,PROD_PACKAGE_ID,STS,STS_DATE FROM PROD_PKG_TO_GRP_SPEC WHERE 1=1  ");sql.append(" and PKG_GRP_RELA_ID=:pkgGrpRelaId");sql.setLong("pkgGrpRelaId", prodPkgToGrpSpec.getPkgGrpRelaId());       Connection conn = null;      PreparedStatement ps = null;      ResultSet rs = null;      prodPkgToGrpSpec =null;      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();            while (rs.next()) {           prodPkgToGrpSpec = new ProdPkgToGrpSpecSVO();           prodPkgToGrpSpec.setGroupSpecId(rs.getString("GROUP_SPEC_ID"));           prodPkgToGrpSpec.setPkgGrpRelaId(rs.getString("PKG_GRP_RELA_ID"));           prodPkgToGrpSpec.setProdPackageId(rs.getString("PROD_PACKAGE_ID"));           prodPkgToGrpSpec.setSts(rs.getString("STS"));           prodPkgToGrpSpec.setStsDate(rs.getTimestamp("STS_DATE"));                 }           } catch (SQLException se) {             throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(rs,ps);           }           return prodPkgToGrpSpec;         } /**   * 批量查询的SQL。   * @return String ： 批量查询的SQL。  */ public List findByVO(GenericVO vo) throws AppException, SysException{         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       ProdPkgToGrpSpecSVO prodPkgToGrpSpec=(ProdPkgToGrpSpecSVO) vo;          List res = new ArrayList();          Connection conn = null;          PreparedStatement ps = null;          ResultSet rs = null;          Sql sql = new Sql("SELECT GROUP_SPEC_ID,PKG_GRP_RELA_ID,PROD_PACKAGE_ID,STS,STS_DATE FROM PROD_PKG_TO_GRP_SPEC WHERE 1=1 ");     try {if (prodPkgToGrpSpec.getFlagGroupSpecId() == 1) {      if (StringUtil.isBlank(prodPkgToGrpSpec.getGroupSpecId())) {             sql.append(" and GROUP_SPEC_ID is null ");          }      else{             sql.append(" and GROUP_SPEC_ID=:groupSpecId");             sql.setLong("groupSpecId", prodPkgToGrpSpec.getGroupSpecId());          }   } if (prodPkgToGrpSpec.getFlagPkgGrpRelaId() == 1) {      if (StringUtil.isBlank(prodPkgToGrpSpec.getPkgGrpRelaId())) {             sql.append(" and PKG_GRP_RELA_ID is null ");          }      else{             sql.append(" and PKG_GRP_RELA_ID=:pkgGrpRelaId");             sql.setLong("pkgGrpRelaId", prodPkgToGrpSpec.getPkgGrpRelaId());          }   } if (prodPkgToGrpSpec.getFlagProdPackageId() == 1) {      if (StringUtil.isBlank(prodPkgToGrpSpec.getProdPackageId())) {             sql.append(" and PROD_PACKAGE_ID is null ");          }      else{             sql.append(" and PROD_PACKAGE_ID=:prodPackageId");             sql.setLong("prodPackageId", prodPkgToGrpSpec.getProdPackageId());          }   } if (prodPkgToGrpSpec.getFlagSts() == 1) {      if (StringUtil.isBlank(prodPkgToGrpSpec.getSts())) {             sql.append(" and STS is null ");          }      else{             sql.append(" and STS=:sts");             sql.setString("sts", prodPkgToGrpSpec.getSts());          }   } if (prodPkgToGrpSpec.getFlagStsDate() == 1) {      if (prodPkgToGrpSpec.getStsDate() == null) {             sql.append(" and STS_DATE is null ");          }      else{             sql.append(" and STS_DATE=:stsDate");             sql.setTimestamp("stsDate", prodPkgToGrpSpec.getStsDate());          }   }            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();                    while (rs.next()) {           prodPkgToGrpSpec = new ProdPkgToGrpSpecSVO();           prodPkgToGrpSpec.setGroupSpecId(rs.getString("GROUP_SPEC_ID"));           prodPkgToGrpSpec.setPkgGrpRelaId(rs.getString("PKG_GRP_RELA_ID"));           prodPkgToGrpSpec.setProdPackageId(rs.getString("PROD_PACKAGE_ID"));           prodPkgToGrpSpec.setSts(rs.getString("STS"));           prodPkgToGrpSpec.setStsDate(rs.getTimestamp("STS_DATE"));               res.add(prodPkgToGrpSpec);                            }          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(rs,ps);               }                         if(0 == res.size()) res = null;          return res;   } /**   * 更新的SQL。   * @return String ： 更新的SQL。  */ public void update(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       ProdPkgToGrpSpecSVO prodPkgToGrpSpec=(ProdPkgToGrpSpecSVO) vo;    if (StringUtil.isBlank(prodPkgToGrpSpec.getPkgGrpRelaId())) {       throw new AppException("100002", "缺少对象的主键！");      }          Connection conn = null;          PreparedStatement ps = null;          Sql sql = new Sql("UPDATE PROD_PKG_TO_GRP_SPEC SET ");     try {if (prodPkgToGrpSpec.getFlagGroupSpecId() == 1) {sql.append("GROUP_SPEC_ID=:groupSpecId,");sql.setLong("groupSpecId", prodPkgToGrpSpec.getGroupSpecId()); } if (prodPkgToGrpSpec.getFlagProdPackageId() == 1) {sql.append("PROD_PACKAGE_ID=:prodPackageId,");sql.setLong("prodPackageId", prodPkgToGrpSpec.getProdPackageId()); } if (prodPkgToGrpSpec.getFlagSts() == 1) {sql.append("STS=:sts,"); sql.setString("sts", prodPkgToGrpSpec.getSts()); } if (prodPkgToGrpSpec.getFlagStsDate() == 1) {sql.append("STS_DATE=:stsDate,"); sql.setTimestamp("stsDate", prodPkgToGrpSpec.getStsDate()); }            	sql.removeSuffix(1); sql.append(" WHERE 1=1 ");sql.append(" and PKG_GRP_RELA_ID=:pkgGrpRelaId");sql.setLong("pkgGrpRelaId", prodPkgToGrpSpec.getPkgGrpRelaId());            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();                    } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(ps);               }                  } /**   * 批量增加记录。   * @return String ： 批量增加的SQL。  */ public void addBat(List list)throws AppException, SysException {     if (list == null) {     throw new AppException("100001", "缺少DAO操作对象！");           }          Connection conn = null;          PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO PROD_PKG_TO_GRP_SPEC(GROUP_SPEC_ID,PKG_GRP_RELA_ID,PROD_PACKAGE_ID,STS,STS_DATE)");sql.append(" VALUES (:groupSpecId,:pkgGrpRelaId,:prodPackageId,:sts,:stsDate)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());    for(int i=0;i<list.size();i++){       ProdPkgToGrpSpecSVO prodPkgToGrpSpec=(ProdPkgToGrpSpecSVO) list.get(i);         if (prodPkgToGrpSpec== null) {         throw new AppException("100001", "缺少DAO操作对象！");       }    if (StringUtil.isBlank(prodPkgToGrpSpec.getPkgGrpRelaId())) {       throw new AppException("100002", "缺少对象的主键！");      }      if (StringUtil.isBlank(prodPkgToGrpSpec.getGroupSpecId())) {      sql.setNullLong("groupSpecId");     } else {    sql.setLong("groupSpecId", prodPkgToGrpSpec.getGroupSpecId());    }       if (StringUtil.isBlank(prodPkgToGrpSpec.getPkgGrpRelaId())) {      sql.setNullLong("pkgGrpRelaId");     } else {    sql.setLong("pkgGrpRelaId", prodPkgToGrpSpec.getPkgGrpRelaId());    }       if (StringUtil.isBlank(prodPkgToGrpSpec.getProdPackageId())) {      sql.setNullLong("prodPackageId");     } else {    sql.setLong("prodPackageId", prodPkgToGrpSpec.getProdPackageId());    }       if (StringUtil.isBlank(prodPkgToGrpSpec.getSts())) {      sql.setNullString("sts");     } else {    sql.setString("sts", prodPkgToGrpSpec.getSts());    }    if (prodPkgToGrpSpec.getStsDate() == null) {      sql.setNullDate("stsDate");     } else {    sql.setTimestamp("stsDate", prodPkgToGrpSpec.getStsDate());    }            sql.fillParams(ps);           sql.log(this.getClass());           sql.clearParameters();           ps.addBatch();           }                  ps.executeBatch();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 根据传入参数删除一条或者一批记录。   * @return String ： 删除的SQL。  */ public void delete(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     ProdPkgToGrpSpecSVO prodPkgToGrpSpec=(ProdPkgToGrpSpecSVO) vo;    if (StringUtil.isBlank(prodPkgToGrpSpec.getPkgGrpRelaId())) {       throw new AppException("100002", "缺少对象的主键！");      }          Connection conn = null;          PreparedStatement ps = null;       Sql sql = new Sql("DELETE FROM PROD_PKG_TO_GRP_SPEC WHERE 1=1  ");sql.append(" and PKG_GRP_RELA_ID=:pkgGrpRelaId");sql.setLong("pkgGrpRelaId", prodPkgToGrpSpec.getPkgGrpRelaId());       try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();            } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(ps);           }         } /**   * 注销一条或者一批   * @return String ： 注销一条或者一批的SQL。  */ public void unable(GenericVO vo)throws AppException, SysException {     ProdPkgToGrpSpecSVO prodPkgToGrpSpec=(ProdPkgToGrpSpecSVO) vo;       }}
