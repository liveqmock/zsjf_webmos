package com.cattsoft.tm.component.dao.oracleImpl;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import java.util.ArrayList;import org.apache.log4j.Logger;import com.cattsoft.pub.connection.ConnectionFactory;import com.cattsoft.tm.component.dao.IWoArcSDAO;import com.cattsoft.tm.vo.WoArcSVO;import com.cattsoft.pub.util.JdbcUtil;import com.cattsoft.pub.dao.Sql;import com.cattsoft.pub.exception.AppException;import com.cattsoft.pub.exception.SysException;import com.cattsoft.pub.vo.GenericVO;import com.cattsoft.pub.util.StringUtil; /**   * 方法WoArcSDAOImpl   * <p>Company: 大唐软件</p>   * @author ：白小亮。   * @version 1.1  2007-9-23  */public class WoArcSDAOImpl implements IWoArcSDAO{    private static Logger log = Logger.getLogger(WoArcSDAOImpl.class);    private static final String UNABLE_STS = "P";  /**   * 增加。   * @return String  */ public void add(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     WoArcSVO woArc=(WoArcSVO) vo;    if (StringUtil.isBlank(woArc.getWoNbr())) {       throw new AppException("100002", "缺少对象的主键！");      }      Connection conn = null;      PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO WO_ARC(ACC_NBR,ACT_TYPE,ADDR_AREA_ID,ADDR_LOCAL_NET_ID,ALARM_DATE,AREA_ID,AR_FLAG,ASGN_DATE,AZ_FLAG,BOOKED_FLAG,BOOK_FLAG,BRANCH_ID,BUSI_STS,BUSI_STS_DATE,COLLAB_WO_NBR,COMPL_DATE,DEAL_FLAG,DO_TIME,DYN_FLAG,EXCH_ID,FAIL_REASON_ID,FULL_FLAG,HALT,HALT_DATE,LOCAL_NET_ID,MAINT_AREA_ID,MAIN_FLAG,MERG_FLAG,MT_AREA_NAME,NOTIFY_FLAG,N_WO_NBR,OVERTIME_ID,PRE_ALARM_DATE,PRINT_COUNT,PRIORITY,REASGN_COUNT,RELA_WO_NBR,REMARKS,RT_STAFF_ID,RT_STAFF_NAME,RUN_STS,RUN_STS_DATE,SERV_DEPT_ID,SERV_INST_ID,SO_NBR,STEP_ID,WORK_AREA_ID,WORK_ITEM_ID,WORK_MODE,WO_NBR,WO_STAFF_ID,WO_STAFF_NAME,WO_TYPE)");sql.append(" VALUES (:accNbr,:actType,:addrAreaId,:addrLocalNetId,:alarmDate,:areaId,:arFlag,:asgnDate,:azFlag,:bookedFlag,:bookFlag,:branchId,:busiSts,:busiStsDate,:collabWoNbr,:complDate,:dealFlag,:doTime,:dynFlag,:exchId,:failReasonId,:fullFlag,:halt,:haltDate,:localNetId,:maintAreaId,:mainFlag,:mergFlag,:mtAreaName,:notifyFlag,:nWoNbr,:overtimeId,:preAlarmDate,:printCount,:priority,:reasgnCount,:relaWoNbr,:remarks,:rtStaffId,:rtStaffName,:runSts,:runStsDate,:servDeptId,:servInstId,:soNbr,:stepId,:workAreaId,:workItemId,:workMode,:woNbr,:woStaffId,:woStaffName,:woType)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());      if (StringUtil.isBlank(woArc.getAccNbr())) {      sql.setNullString("accNbr");     } else {    sql.setString("accNbr", woArc.getAccNbr());    }       if (StringUtil.isBlank(woArc.getActType())) {      sql.setNullString("actType");     } else {    sql.setString("actType", woArc.getActType());    }       if (StringUtil.isBlank(woArc.getAddrAreaId())) {      sql.setNullLong("addrAreaId");     } else {    sql.setLong("addrAreaId", woArc.getAddrAreaId());    }       if (StringUtil.isBlank(woArc.getAddrLocalNetId())) {      sql.setNullLong("addrLocalNetId");     } else {    sql.setLong("addrLocalNetId", woArc.getAddrLocalNetId());    }    if (woArc.getAlarmDate() == null) {      sql.setNullDate("alarmDate");     } else {    sql.setTimestamp("alarmDate", woArc.getAlarmDate());    }       if (StringUtil.isBlank(woArc.getAreaId())) {      sql.setNullLong("areaId");     } else {    sql.setLong("areaId", woArc.getAreaId());    }       if (StringUtil.isBlank(woArc.getArFlag())) {      sql.setNullString("arFlag");     } else {    sql.setString("arFlag", woArc.getArFlag());    }    if (woArc.getAsgnDate() == null) {      sql.setNullDate("asgnDate");     } else {    sql.setTimestamp("asgnDate", woArc.getAsgnDate());    }       if (StringUtil.isBlank(woArc.getAzFlag())) {      sql.setNullString("azFlag");     } else {    sql.setString("azFlag", woArc.getAzFlag());    }       if (StringUtil.isBlank(woArc.getBookedFlag())) {      sql.setNullString("bookedFlag");     } else {    sql.setString("bookedFlag", woArc.getBookedFlag());    }       if (StringUtil.isBlank(woArc.getBookFlag())) {      sql.setNullString("bookFlag");     } else {    sql.setString("bookFlag", woArc.getBookFlag());    }       if (StringUtil.isBlank(woArc.getBranchId())) {      sql.setNullLong("branchId");     } else {    sql.setLong("branchId", woArc.getBranchId());    }       if (StringUtil.isBlank(woArc.getBusiSts())) {      sql.setNullString("busiSts");     } else {    sql.setString("busiSts", woArc.getBusiSts());    }    if (woArc.getBusiStsDate() == null) {      sql.setNullDate("busiStsDate");     } else {    sql.setTimestamp("busiStsDate", woArc.getBusiStsDate());    }       if (StringUtil.isBlank(woArc.getCollabWoNbr())) {      sql.setNullLong("collabWoNbr");     } else {    sql.setLong("collabWoNbr", woArc.getCollabWoNbr());    }    if (woArc.getComplDate() == null) {      sql.setNullDate("complDate");     } else {    sql.setTimestamp("complDate", woArc.getComplDate());    }       if (StringUtil.isBlank(woArc.getDealFlag())) {      sql.setNullString("dealFlag");     } else {    sql.setString("dealFlag", woArc.getDealFlag());    }       if (StringUtil.isBlank(woArc.getDoTime())) {      sql.setNullLong("doTime");     } else {    sql.setLong("doTime", woArc.getDoTime());    }       if (StringUtil.isBlank(woArc.getDynFlag())) {      sql.setNullString("dynFlag");     } else {    sql.setString("dynFlag", woArc.getDynFlag());    }       if (StringUtil.isBlank(woArc.getExchId())) {      sql.setNullLong("exchId");     } else {    sql.setLong("exchId", woArc.getExchId());    }       if (StringUtil.isBlank(woArc.getFailReasonId())) {      sql.setNullString("failReasonId");     } else {    sql.setString("failReasonId", woArc.getFailReasonId());    }       if (StringUtil.isBlank(woArc.getFullFlag())) {      sql.setNullString("fullFlag");     } else {    sql.setString("fullFlag", woArc.getFullFlag());    }       if (StringUtil.isBlank(woArc.getHalt())) {      sql.setNullString("halt");     } else {    sql.setString("halt", woArc.getHalt());    }    if (woArc.getHaltDate() == null) {      sql.setNullDate("haltDate");     } else {    sql.setTimestamp("haltDate", woArc.getHaltDate());    }       if (StringUtil.isBlank(woArc.getLocalNetId())) {      sql.setNullLong("localNetId");     } else {    sql.setLong("localNetId", woArc.getLocalNetId());    }       if (StringUtil.isBlank(woArc.getMaintAreaId())) {      sql.setNullLong("maintAreaId");     } else {    sql.setLong("maintAreaId", woArc.getMaintAreaId());    }       if (StringUtil.isBlank(woArc.getMainFlag())) {      sql.setNullString("mainFlag");     } else {    sql.setString("mainFlag", woArc.getMainFlag());    }       if (StringUtil.isBlank(woArc.getMergFlag())) {      sql.setNullString("mergFlag");     } else {    sql.setString("mergFlag", woArc.getMergFlag());    }       if (StringUtil.isBlank(woArc.getMtAreaName())) {      sql.setNullString("mtAreaName");     } else {    sql.setString("mtAreaName", woArc.getMtAreaName());    }       if (StringUtil.isBlank(woArc.getNotifyFlag())) {      sql.setNullString("notifyFlag");     } else {    sql.setString("notifyFlag", woArc.getNotifyFlag());    }       if (StringUtil.isBlank(woArc.getNWoNbr())) {      sql.setNullString("nWoNbr");     } else {    sql.setString("nWoNbr", woArc.getNWoNbr());    }       if (StringUtil.isBlank(woArc.getOvertimeId())) {      sql.setNullString("overtimeId");     } else {    sql.setString("overtimeId", woArc.getOvertimeId());    }    if (woArc.getPreAlarmDate() == null) {      sql.setNullDate("preAlarmDate");     } else {    sql.setTimestamp("preAlarmDate", woArc.getPreAlarmDate());    }       if (StringUtil.isBlank(woArc.getPrintCount())) {      sql.setNullLong("printCount");     } else {    sql.setLong("printCount", woArc.getPrintCount());    }       if (StringUtil.isBlank(woArc.getPriority())) {      sql.setNullString("priority");     } else {    sql.setString("priority", woArc.getPriority());    }       if (StringUtil.isBlank(woArc.getReasgnCount())) {      sql.setNullLong("reasgnCount");     } else {    sql.setLong("reasgnCount", woArc.getReasgnCount());    }       if (StringUtil.isBlank(woArc.getRelaWoNbr())) {      sql.setNullLong("relaWoNbr");     } else {    sql.setLong("relaWoNbr", woArc.getRelaWoNbr());    }       if (StringUtil.isBlank(woArc.getRemarks())) {      sql.setNullString("remarks");     } else {    sql.setString("remarks", woArc.getRemarks());    }       if (StringUtil.isBlank(woArc.getRtStaffId())) {      sql.setNullLong("rtStaffId");     } else {    sql.setLong("rtStaffId", woArc.getRtStaffId());    }       if (StringUtil.isBlank(woArc.getRtStaffName())) {      sql.setNullString("rtStaffName");     } else {    sql.setString("rtStaffName", woArc.getRtStaffName());    }       if (StringUtil.isBlank(woArc.getRunSts())) {      sql.setNullString("runSts");     } else {    sql.setString("runSts", woArc.getRunSts());    }    if (woArc.getRunStsDate() == null) {      sql.setNullDate("runStsDate");     } else {    sql.setTimestamp("runStsDate", woArc.getRunStsDate());    }       if (StringUtil.isBlank(woArc.getServDeptId())) {      sql.setNullLong("servDeptId");     } else {    sql.setLong("servDeptId", woArc.getServDeptId());    }       if (StringUtil.isBlank(woArc.getServInstId())) {      sql.setNullLong("servInstId");     } else {    sql.setLong("servInstId", woArc.getServInstId());    }       if (StringUtil.isBlank(woArc.getSoNbr())) {      sql.setNullString("soNbr");     } else {    sql.setString("soNbr", woArc.getSoNbr());    }       if (StringUtil.isBlank(woArc.getStepId())) {      sql.setNullString("stepId");     } else {    sql.setString("stepId", woArc.getStepId());    }       if (StringUtil.isBlank(woArc.getWorkAreaId())) {      sql.setNullLong("workAreaId");     } else {    sql.setLong("workAreaId", woArc.getWorkAreaId());    }       if (StringUtil.isBlank(woArc.getWorkItemId())) {      sql.setNullLong("workItemId");     } else {    sql.setLong("workItemId", woArc.getWorkItemId());    }       if (StringUtil.isBlank(woArc.getWorkMode())) {      sql.setNullString("workMode");     } else {    sql.setString("workMode", woArc.getWorkMode());    }       if (StringUtil.isBlank(woArc.getWoNbr())) {      sql.setNullLong("woNbr");     } else {    sql.setLong("woNbr", woArc.getWoNbr());    }       if (StringUtil.isBlank(woArc.getWoStaffId())) {      sql.setNullLong("woStaffId");     } else {    sql.setLong("woStaffId", woArc.getWoStaffId());    }       if (StringUtil.isBlank(woArc.getWoStaffName())) {      sql.setNullString("woStaffName");     } else {    sql.setString("woStaffName", woArc.getWoStaffName());    }       if (StringUtil.isBlank(woArc.getWoType())) {      sql.setNullString("woType");     } else {    sql.setString("woType", woArc.getWoType());    }            sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 主键查询的SQL。   * @return String ： 主键查询的SQL。  */ public GenericVO findByPK(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     WoArcSVO woArc=(WoArcSVO) vo;    if (StringUtil.isBlank(woArc.getWoNbr())) {       throw new AppException("100002", "缺少对象的主键！");      }       Sql sql = new Sql("SELECT ACC_NBR,ACT_TYPE,ADDR_AREA_ID,ADDR_LOCAL_NET_ID,ALARM_DATE,AREA_ID,AR_FLAG,ASGN_DATE,AZ_FLAG,BOOKED_FLAG,BOOK_FLAG,BRANCH_ID,BUSI_STS,BUSI_STS_DATE,COLLAB_WO_NBR,COMPL_DATE,DEAL_FLAG,DO_TIME,DYN_FLAG,EXCH_ID,FAIL_REASON_ID,FULL_FLAG,HALT,HALT_DATE,LOCAL_NET_ID,MAINT_AREA_ID,MAIN_FLAG,MERG_FLAG,MT_AREA_NAME,NOTIFY_FLAG,N_WO_NBR,OVERTIME_ID,PRE_ALARM_DATE,PRINT_COUNT,PRIORITY,REASGN_COUNT,RELA_WO_NBR,REMARKS,RT_STAFF_ID,RT_STAFF_NAME,RUN_STS,RUN_STS_DATE,SERV_DEPT_ID,SERV_INST_ID,SO_NBR,STEP_ID,WORK_AREA_ID,WORK_ITEM_ID,WORK_MODE,WO_NBR,WO_STAFF_ID,WO_STAFF_NAME,WO_TYPE FROM WO_ARC WHERE 1=1  ");sql.append(" and WO_NBR=:woNbr");sql.setLong("woNbr", woArc.getWoNbr());       Connection conn = null;      PreparedStatement ps = null;      ResultSet rs = null;      woArc =null;      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();            while (rs.next()) {           woArc = new WoArcSVO();           woArc.setAccNbr(rs.getString("ACC_NBR"));           woArc.setActType(rs.getString("ACT_TYPE"));           woArc.setAddrAreaId(rs.getString("ADDR_AREA_ID"));           woArc.setAddrLocalNetId(rs.getString("ADDR_LOCAL_NET_ID"));           woArc.setAlarmDate(rs.getTimestamp("ALARM_DATE"));           woArc.setAreaId(rs.getString("AREA_ID"));           woArc.setArFlag(rs.getString("AR_FLAG"));           woArc.setAsgnDate(rs.getTimestamp("ASGN_DATE"));           woArc.setAzFlag(rs.getString("AZ_FLAG"));           woArc.setBookedFlag(rs.getString("BOOKED_FLAG"));           woArc.setBookFlag(rs.getString("BOOK_FLAG"));           woArc.setBranchId(rs.getString("BRANCH_ID"));           woArc.setBusiSts(rs.getString("BUSI_STS"));           woArc.setBusiStsDate(rs.getTimestamp("BUSI_STS_DATE"));           woArc.setCollabWoNbr(rs.getString("COLLAB_WO_NBR"));           woArc.setComplDate(rs.getTimestamp("COMPL_DATE"));           woArc.setDealFlag(rs.getString("DEAL_FLAG"));           woArc.setDoTime(rs.getString("DO_TIME"));           woArc.setDynFlag(rs.getString("DYN_FLAG"));           woArc.setExchId(rs.getString("EXCH_ID"));           woArc.setFailReasonId(rs.getString("FAIL_REASON_ID"));           woArc.setFullFlag(rs.getString("FULL_FLAG"));           woArc.setHalt(rs.getString("HALT"));           woArc.setHaltDate(rs.getTimestamp("HALT_DATE"));           woArc.setLocalNetId(rs.getString("LOCAL_NET_ID"));           woArc.setMaintAreaId(rs.getString("MAINT_AREA_ID"));           woArc.setMainFlag(rs.getString("MAIN_FLAG"));           woArc.setMergFlag(rs.getString("MERG_FLAG"));           woArc.setMtAreaName(rs.getString("MT_AREA_NAME"));           woArc.setNotifyFlag(rs.getString("NOTIFY_FLAG"));           woArc.setNWoNbr(rs.getString("N_WO_NBR"));           woArc.setOvertimeId(rs.getString("OVERTIME_ID"));           woArc.setPreAlarmDate(rs.getTimestamp("PRE_ALARM_DATE"));           woArc.setPrintCount(rs.getString("PRINT_COUNT"));           woArc.setPriority(rs.getString("PRIORITY"));           woArc.setReasgnCount(rs.getString("REASGN_COUNT"));           woArc.setRelaWoNbr(rs.getString("RELA_WO_NBR"));           woArc.setRemarks(rs.getString("REMARKS"));           woArc.setRtStaffId(rs.getString("RT_STAFF_ID"));           woArc.setRtStaffName(rs.getString("RT_STAFF_NAME"));           woArc.setRunSts(rs.getString("RUN_STS"));           woArc.setRunStsDate(rs.getTimestamp("RUN_STS_DATE"));           woArc.setServDeptId(rs.getString("SERV_DEPT_ID"));           woArc.setServInstId(rs.getString("SERV_INST_ID"));           woArc.setSoNbr(rs.getString("SO_NBR"));           woArc.setStepId(rs.getString("STEP_ID"));           woArc.setWorkAreaId(rs.getString("WORK_AREA_ID"));           woArc.setWorkItemId(rs.getString("WORK_ITEM_ID"));           woArc.setWorkMode(rs.getString("WORK_MODE"));           woArc.setWoNbr(rs.getString("WO_NBR"));           woArc.setWoStaffId(rs.getString("WO_STAFF_ID"));           woArc.setWoStaffName(rs.getString("WO_STAFF_NAME"));           woArc.setWoType(rs.getString("WO_TYPE"));                 }           } catch (SQLException se) {             throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(rs,ps);           }           return woArc;         } /**   * 批量查询的SQL。   * @return String ： 批量查询的SQL。  */ public List findByVO(GenericVO vo) throws AppException, SysException{         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       WoArcSVO woArc=(WoArcSVO) vo;          List res = new ArrayList();          Connection conn = null;          PreparedStatement ps = null;          ResultSet rs = null;          Sql sql = new Sql("SELECT ACC_NBR,ACT_TYPE,ADDR_AREA_ID,ADDR_LOCAL_NET_ID,ALARM_DATE,AREA_ID,AR_FLAG,ASGN_DATE,AZ_FLAG,BOOKED_FLAG,BOOK_FLAG,BRANCH_ID,BUSI_STS,BUSI_STS_DATE,COLLAB_WO_NBR,COMPL_DATE,DEAL_FLAG,DO_TIME,DYN_FLAG,EXCH_ID,FAIL_REASON_ID,FULL_FLAG,HALT,HALT_DATE,LOCAL_NET_ID,MAINT_AREA_ID,MAIN_FLAG,MERG_FLAG,MT_AREA_NAME,NOTIFY_FLAG,N_WO_NBR,OVERTIME_ID,PRE_ALARM_DATE,PRINT_COUNT,PRIORITY,REASGN_COUNT,RELA_WO_NBR,REMARKS,RT_STAFF_ID,RT_STAFF_NAME,RUN_STS,RUN_STS_DATE,SERV_DEPT_ID,SERV_INST_ID,SO_NBR,STEP_ID,WORK_AREA_ID,WORK_ITEM_ID,WORK_MODE,WO_NBR,WO_STAFF_ID,WO_STAFF_NAME,WO_TYPE FROM WO_ARC WHERE 1=1 ");     try {if (woArc.getFlagAccNbr() == 1) {      if (StringUtil.isBlank(woArc.getAccNbr())) {             sql.append(" and ACC_NBR is null ");          }      else{             sql.append(" and ACC_NBR=:accNbr");             sql.setString("accNbr", woArc.getAccNbr());          }   } if (woArc.getFlagActType() == 1) {      if (StringUtil.isBlank(woArc.getActType())) {             sql.append(" and ACT_TYPE is null ");          }      else{             sql.append(" and ACT_TYPE=:actType");             sql.setString("actType", woArc.getActType());          }   } if (woArc.getFlagAddrAreaId() == 1) {      if (StringUtil.isBlank(woArc.getAddrAreaId())) {             sql.append(" and ADDR_AREA_ID is null ");          }      else{             sql.append(" and ADDR_AREA_ID=:addrAreaId");             sql.setLong("addrAreaId", woArc.getAddrAreaId());          }   } if (woArc.getFlagAddrLocalNetId() == 1) {      if (StringUtil.isBlank(woArc.getAddrLocalNetId())) {             sql.append(" and ADDR_LOCAL_NET_ID is null ");          }      else{             sql.append(" and ADDR_LOCAL_NET_ID=:addrLocalNetId");             sql.setLong("addrLocalNetId", woArc.getAddrLocalNetId());          }   } if (woArc.getFlagAlarmDate() == 1) {      if (woArc.getAlarmDate() == null) {             sql.append(" and ALARM_DATE is null ");          }      else{             sql.append(" and ALARM_DATE=:alarmDate");             sql.setTimestamp("alarmDate", woArc.getAlarmDate());          }   } if (woArc.getFlagAreaId() == 1) {      if (StringUtil.isBlank(woArc.getAreaId())) {             sql.append(" and AREA_ID is null ");          }      else{             sql.append(" and AREA_ID=:areaId");             sql.setLong("areaId", woArc.getAreaId());          }   } if (woArc.getFlagArFlag() == 1) {      if (StringUtil.isBlank(woArc.getArFlag())) {             sql.append(" and AR_FLAG is null ");          }      else{             sql.append(" and AR_FLAG=:arFlag");             sql.setString("arFlag", woArc.getArFlag());          }   } if (woArc.getFlagAsgnDate() == 1) {      if (woArc.getAsgnDate() == null) {             sql.append(" and ASGN_DATE is null ");          }      else{             sql.append(" and ASGN_DATE=:asgnDate");             sql.setTimestamp("asgnDate", woArc.getAsgnDate());          }   } if (woArc.getFlagAzFlag() == 1) {      if (StringUtil.isBlank(woArc.getAzFlag())) {             sql.append(" and AZ_FLAG is null ");          }      else{             sql.append(" and AZ_FLAG=:azFlag");             sql.setString("azFlag", woArc.getAzFlag());          }   } if (woArc.getFlagBookedFlag() == 1) {      if (StringUtil.isBlank(woArc.getBookedFlag())) {             sql.append(" and BOOKED_FLAG is null ");          }      else{             sql.append(" and BOOKED_FLAG=:bookedFlag");             sql.setString("bookedFlag", woArc.getBookedFlag());          }   } if (woArc.getFlagBookFlag() == 1) {      if (StringUtil.isBlank(woArc.getBookFlag())) {             sql.append(" and BOOK_FLAG is null ");          }      else{             sql.append(" and BOOK_FLAG=:bookFlag");             sql.setString("bookFlag", woArc.getBookFlag());          }   } if (woArc.getFlagBranchId() == 1) {      if (StringUtil.isBlank(woArc.getBranchId())) {             sql.append(" and BRANCH_ID is null ");          }      else{             sql.append(" and BRANCH_ID=:branchId");             sql.setLong("branchId", woArc.getBranchId());          }   } if (woArc.getFlagBusiSts() == 1) {      if (StringUtil.isBlank(woArc.getBusiSts())) {             sql.append(" and BUSI_STS is null ");          }      else{             sql.append(" and BUSI_STS=:busiSts");             sql.setString("busiSts", woArc.getBusiSts());          }   } if (woArc.getFlagBusiStsDate() == 1) {      if (woArc.getBusiStsDate() == null) {             sql.append(" and BUSI_STS_DATE is null ");          }      else{             sql.append(" and BUSI_STS_DATE=:busiStsDate");             sql.setTimestamp("busiStsDate", woArc.getBusiStsDate());          }   } if (woArc.getFlagCollabWoNbr() == 1) {      if (StringUtil.isBlank(woArc.getCollabWoNbr())) {             sql.append(" and COLLAB_WO_NBR is null ");          }      else{             sql.append(" and COLLAB_WO_NBR=:collabWoNbr");             sql.setLong("collabWoNbr", woArc.getCollabWoNbr());          }   } if (woArc.getFlagComplDate() == 1) {      if (woArc.getComplDate() == null) {             sql.append(" and COMPL_DATE is null ");          }      else{             sql.append(" and COMPL_DATE=:complDate");             sql.setTimestamp("complDate", woArc.getComplDate());          }   } if (woArc.getFlagDealFlag() == 1) {      if (StringUtil.isBlank(woArc.getDealFlag())) {             sql.append(" and DEAL_FLAG is null ");          }      else{             sql.append(" and DEAL_FLAG=:dealFlag");             sql.setString("dealFlag", woArc.getDealFlag());          }   } if (woArc.getFlagDoTime() == 1) {      if (StringUtil.isBlank(woArc.getDoTime())) {             sql.append(" and DO_TIME is null ");          }      else{             sql.append(" and DO_TIME=:doTime");             sql.setLong("doTime", woArc.getDoTime());          }   } if (woArc.getFlagDynFlag() == 1) {      if (StringUtil.isBlank(woArc.getDynFlag())) {             sql.append(" and DYN_FLAG is null ");          }      else{             sql.append(" and DYN_FLAG=:dynFlag");             sql.setString("dynFlag", woArc.getDynFlag());          }   } if (woArc.getFlagExchId() == 1) {      if (StringUtil.isBlank(woArc.getExchId())) {             sql.append(" and EXCH_ID is null ");          }      else{             sql.append(" and EXCH_ID=:exchId");             sql.setLong("exchId", woArc.getExchId());          }   } if (woArc.getFlagFailReasonId() == 1) {      if (StringUtil.isBlank(woArc.getFailReasonId())) {             sql.append(" and FAIL_REASON_ID is null ");          }      else{             sql.append(" and FAIL_REASON_ID=:failReasonId");             sql.setString("failReasonId", woArc.getFailReasonId());          }   } if (woArc.getFlagFullFlag() == 1) {      if (StringUtil.isBlank(woArc.getFullFlag())) {             sql.append(" and FULL_FLAG is null ");          }      else{             sql.append(" and FULL_FLAG=:fullFlag");             sql.setString("fullFlag", woArc.getFullFlag());          }   } if (woArc.getFlagHalt() == 1) {      if (StringUtil.isBlank(woArc.getHalt())) {             sql.append(" and HALT is null ");          }      else{             sql.append(" and HALT=:halt");             sql.setString("halt", woArc.getHalt());          }   } if (woArc.getFlagHaltDate() == 1) {      if (woArc.getHaltDate() == null) {             sql.append(" and HALT_DATE is null ");          }      else{             sql.append(" and HALT_DATE=:haltDate");             sql.setTimestamp("haltDate", woArc.getHaltDate());          }   } if (woArc.getFlagLocalNetId() == 1) {      if (StringUtil.isBlank(woArc.getLocalNetId())) {             sql.append(" and LOCAL_NET_ID is null ");          }      else{             sql.append(" and LOCAL_NET_ID=:localNetId");             sql.setLong("localNetId", woArc.getLocalNetId());          }   } if (woArc.getFlagMaintAreaId() == 1) {      if (StringUtil.isBlank(woArc.getMaintAreaId())) {             sql.append(" and MAINT_AREA_ID is null ");          }      else{             sql.append(" and MAINT_AREA_ID=:maintAreaId");             sql.setLong("maintAreaId", woArc.getMaintAreaId());          }   } if (woArc.getFlagMainFlag() == 1) {      if (StringUtil.isBlank(woArc.getMainFlag())) {             sql.append(" and MAIN_FLAG is null ");          }      else{             sql.append(" and MAIN_FLAG=:mainFlag");             sql.setString("mainFlag", woArc.getMainFlag());          }   } if (woArc.getFlagMergFlag() == 1) {      if (StringUtil.isBlank(woArc.getMergFlag())) {             sql.append(" and MERG_FLAG is null ");          }      else{             sql.append(" and MERG_FLAG=:mergFlag");             sql.setString("mergFlag", woArc.getMergFlag());          }   } if (woArc.getFlagMtAreaName() == 1) {      if (StringUtil.isBlank(woArc.getMtAreaName())) {             sql.append(" and MT_AREA_NAME is null ");          }      else{             sql.append(" and MT_AREA_NAME=:mtAreaName");             sql.setString("mtAreaName", woArc.getMtAreaName());          }   } if (woArc.getFlagNotifyFlag() == 1) {      if (StringUtil.isBlank(woArc.getNotifyFlag())) {             sql.append(" and NOTIFY_FLAG is null ");          }      else{             sql.append(" and NOTIFY_FLAG=:notifyFlag");             sql.setString("notifyFlag", woArc.getNotifyFlag());          }   } if (woArc.getFlagNWoNbr() == 1) {      if (StringUtil.isBlank(woArc.getNWoNbr())) {             sql.append(" and N_WO_NBR is null ");          }      else{             sql.append(" and N_WO_NBR=:nWoNbr");             sql.setString("nWoNbr", woArc.getNWoNbr());          }   } if (woArc.getFlagOvertimeId() == 1) {      if (StringUtil.isBlank(woArc.getOvertimeId())) {             sql.append(" and OVERTIME_ID is null ");          }      else{             sql.append(" and OVERTIME_ID=:overtimeId");             sql.setString("overtimeId", woArc.getOvertimeId());          }   } if (woArc.getFlagPreAlarmDate() == 1) {      if (woArc.getPreAlarmDate() == null) {             sql.append(" and PRE_ALARM_DATE is null ");          }      else{             sql.append(" and PRE_ALARM_DATE=:preAlarmDate");             sql.setTimestamp("preAlarmDate", woArc.getPreAlarmDate());          }   } if (woArc.getFlagPrintCount() == 1) {      if (StringUtil.isBlank(woArc.getPrintCount())) {             sql.append(" and PRINT_COUNT is null ");          }      else{             sql.append(" and PRINT_COUNT=:printCount");             sql.setLong("printCount", woArc.getPrintCount());          }   } if (woArc.getFlagPriority() == 1) {      if (StringUtil.isBlank(woArc.getPriority())) {             sql.append(" and PRIORITY is null ");          }      else{             sql.append(" and PRIORITY=:priority");             sql.setString("priority", woArc.getPriority());          }   } if (woArc.getFlagReasgnCount() == 1) {      if (StringUtil.isBlank(woArc.getReasgnCount())) {             sql.append(" and REASGN_COUNT is null ");          }      else{             sql.append(" and REASGN_COUNT=:reasgnCount");             sql.setLong("reasgnCount", woArc.getReasgnCount());          }   } if (woArc.getFlagRelaWoNbr() == 1) {      if (StringUtil.isBlank(woArc.getRelaWoNbr())) {             sql.append(" and RELA_WO_NBR is null ");          }      else{             sql.append(" and RELA_WO_NBR=:relaWoNbr");             sql.setLong("relaWoNbr", woArc.getRelaWoNbr());          }   } if (woArc.getFlagRemarks() == 1) {      if (StringUtil.isBlank(woArc.getRemarks())) {             sql.append(" and REMARKS is null ");          }      else{             sql.append(" and REMARKS=:remarks");             sql.setString("remarks", woArc.getRemarks());          }   } if (woArc.getFlagRtStaffId() == 1) {      if (StringUtil.isBlank(woArc.getRtStaffId())) {             sql.append(" and RT_STAFF_ID is null ");          }      else{             sql.append(" and RT_STAFF_ID=:rtStaffId");             sql.setLong("rtStaffId", woArc.getRtStaffId());          }   } if (woArc.getFlagRtStaffName() == 1) {      if (StringUtil.isBlank(woArc.getRtStaffName())) {             sql.append(" and RT_STAFF_NAME is null ");          }      else{             sql.append(" and RT_STAFF_NAME=:rtStaffName");             sql.setString("rtStaffName", woArc.getRtStaffName());          }   } if (woArc.getFlagRunSts() == 1) {      if (StringUtil.isBlank(woArc.getRunSts())) {             sql.append(" and RUN_STS is null ");          }      else{             sql.append(" and RUN_STS=:runSts");             sql.setString("runSts", woArc.getRunSts());          }   } if (woArc.getFlagRunStsDate() == 1) {      if (woArc.getRunStsDate() == null) {             sql.append(" and RUN_STS_DATE is null ");          }      else{             sql.append(" and RUN_STS_DATE=:runStsDate");             sql.setTimestamp("runStsDate", woArc.getRunStsDate());          }   } if (woArc.getFlagServDeptId() == 1) {      if (StringUtil.isBlank(woArc.getServDeptId())) {             sql.append(" and SERV_DEPT_ID is null ");          }      else{             sql.append(" and SERV_DEPT_ID=:servDeptId");             sql.setLong("servDeptId", woArc.getServDeptId());          }   } if (woArc.getFlagServInstId() == 1) {      if (StringUtil.isBlank(woArc.getServInstId())) {             sql.append(" and SERV_INST_ID is null ");          }      else{             sql.append(" and SERV_INST_ID=:servInstId");             sql.setLong("servInstId", woArc.getServInstId());          }   } if (woArc.getFlagSoNbr() == 1) {      if (StringUtil.isBlank(woArc.getSoNbr())) {             sql.append(" and SO_NBR is null ");          }      else{             sql.append(" and SO_NBR=:soNbr");             sql.setString("soNbr", woArc.getSoNbr());          }   } if (woArc.getFlagStepId() == 1) {      if (StringUtil.isBlank(woArc.getStepId())) {             sql.append(" and STEP_ID is null ");          }      else{             sql.append(" and STEP_ID=:stepId");             sql.setString("stepId", woArc.getStepId());          }   } if (woArc.getFlagWorkAreaId() == 1) {      if (StringUtil.isBlank(woArc.getWorkAreaId())) {             sql.append(" and WORK_AREA_ID is null ");          }      else{             sql.append(" and WORK_AREA_ID=:workAreaId");             sql.setLong("workAreaId", woArc.getWorkAreaId());          }   } if (woArc.getFlagWorkItemId() == 1) {      if (StringUtil.isBlank(woArc.getWorkItemId())) {             sql.append(" and WORK_ITEM_ID is null ");          }      else{             sql.append(" and WORK_ITEM_ID=:workItemId");             sql.setLong("workItemId", woArc.getWorkItemId());          }   } if (woArc.getFlagWorkMode() == 1) {      if (StringUtil.isBlank(woArc.getWorkMode())) {             sql.append(" and WORK_MODE is null ");          }      else{             sql.append(" and WORK_MODE=:workMode");             sql.setString("workMode", woArc.getWorkMode());          }   } if (woArc.getFlagWoNbr() == 1) {      if (StringUtil.isBlank(woArc.getWoNbr())) {             sql.append(" and WO_NBR is null ");          }      else{             sql.append(" and WO_NBR=:woNbr");             sql.setLong("woNbr", woArc.getWoNbr());          }   } if (woArc.getFlagWoStaffId() == 1) {      if (StringUtil.isBlank(woArc.getWoStaffId())) {             sql.append(" and WO_STAFF_ID is null ");          }      else{             sql.append(" and WO_STAFF_ID=:woStaffId");             sql.setLong("woStaffId", woArc.getWoStaffId());          }   } if (woArc.getFlagWoStaffName() == 1) {      if (StringUtil.isBlank(woArc.getWoStaffName())) {             sql.append(" and WO_STAFF_NAME is null ");          }      else{             sql.append(" and WO_STAFF_NAME=:woStaffName");             sql.setString("woStaffName", woArc.getWoStaffName());          }   } if (woArc.getFlagWoType() == 1) {      if (StringUtil.isBlank(woArc.getWoType())) {             sql.append(" and WO_TYPE is null ");          }      else{             sql.append(" and WO_TYPE=:woType");             sql.setString("woType", woArc.getWoType());          }   }            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();                    while (rs.next()) {           woArc = new WoArcSVO();           woArc.setAccNbr(rs.getString("ACC_NBR"));           woArc.setActType(rs.getString("ACT_TYPE"));           woArc.setAddrAreaId(rs.getString("ADDR_AREA_ID"));           woArc.setAddrLocalNetId(rs.getString("ADDR_LOCAL_NET_ID"));           woArc.setAlarmDate(rs.getTimestamp("ALARM_DATE"));           woArc.setAreaId(rs.getString("AREA_ID"));           woArc.setArFlag(rs.getString("AR_FLAG"));           woArc.setAsgnDate(rs.getTimestamp("ASGN_DATE"));           woArc.setAzFlag(rs.getString("AZ_FLAG"));           woArc.setBookedFlag(rs.getString("BOOKED_FLAG"));           woArc.setBookFlag(rs.getString("BOOK_FLAG"));           woArc.setBranchId(rs.getString("BRANCH_ID"));           woArc.setBusiSts(rs.getString("BUSI_STS"));           woArc.setBusiStsDate(rs.getTimestamp("BUSI_STS_DATE"));           woArc.setCollabWoNbr(rs.getString("COLLAB_WO_NBR"));           woArc.setComplDate(rs.getTimestamp("COMPL_DATE"));           woArc.setDealFlag(rs.getString("DEAL_FLAG"));           woArc.setDoTime(rs.getString("DO_TIME"));           woArc.setDynFlag(rs.getString("DYN_FLAG"));           woArc.setExchId(rs.getString("EXCH_ID"));           woArc.setFailReasonId(rs.getString("FAIL_REASON_ID"));           woArc.setFullFlag(rs.getString("FULL_FLAG"));           woArc.setHalt(rs.getString("HALT"));           woArc.setHaltDate(rs.getTimestamp("HALT_DATE"));           woArc.setLocalNetId(rs.getString("LOCAL_NET_ID"));           woArc.setMaintAreaId(rs.getString("MAINT_AREA_ID"));           woArc.setMainFlag(rs.getString("MAIN_FLAG"));           woArc.setMergFlag(rs.getString("MERG_FLAG"));           woArc.setMtAreaName(rs.getString("MT_AREA_NAME"));           woArc.setNotifyFlag(rs.getString("NOTIFY_FLAG"));           woArc.setNWoNbr(rs.getString("N_WO_NBR"));           woArc.setOvertimeId(rs.getString("OVERTIME_ID"));           woArc.setPreAlarmDate(rs.getTimestamp("PRE_ALARM_DATE"));           woArc.setPrintCount(rs.getString("PRINT_COUNT"));           woArc.setPriority(rs.getString("PRIORITY"));           woArc.setReasgnCount(rs.getString("REASGN_COUNT"));           woArc.setRelaWoNbr(rs.getString("RELA_WO_NBR"));           woArc.setRemarks(rs.getString("REMARKS"));           woArc.setRtStaffId(rs.getString("RT_STAFF_ID"));           woArc.setRtStaffName(rs.getString("RT_STAFF_NAME"));           woArc.setRunSts(rs.getString("RUN_STS"));           woArc.setRunStsDate(rs.getTimestamp("RUN_STS_DATE"));           woArc.setServDeptId(rs.getString("SERV_DEPT_ID"));           woArc.setServInstId(rs.getString("SERV_INST_ID"));           woArc.setSoNbr(rs.getString("SO_NBR"));           woArc.setStepId(rs.getString("STEP_ID"));           woArc.setWorkAreaId(rs.getString("WORK_AREA_ID"));           woArc.setWorkItemId(rs.getString("WORK_ITEM_ID"));           woArc.setWorkMode(rs.getString("WORK_MODE"));           woArc.setWoNbr(rs.getString("WO_NBR"));           woArc.setWoStaffId(rs.getString("WO_STAFF_ID"));           woArc.setWoStaffName(rs.getString("WO_STAFF_NAME"));           woArc.setWoType(rs.getString("WO_TYPE"));               res.add(woArc);                            }          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(rs,ps);               }                         if(0 == res.size()) res = null;          return res;   } /**   * 更新的SQL。   * @return String ： 更新的SQL。  */ public void update(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       WoArcSVO woArc=(WoArcSVO) vo;    if (StringUtil.isBlank(woArc.getWoNbr())) {       throw new AppException("100002", "缺少对象的主键！");      }          Connection conn = null;          PreparedStatement ps = null;          Sql sql = new Sql("UPDATE WO_ARC SET ");     try {if (woArc.getFlagAccNbr() == 1) {sql.append("ACC_NBR=:accNbr,"); sql.setString("accNbr", woArc.getAccNbr()); } if (woArc.getFlagActType() == 1) {sql.append("ACT_TYPE=:actType,"); sql.setString("actType", woArc.getActType()); } if (woArc.getFlagAddrAreaId() == 1) {sql.append("ADDR_AREA_ID=:addrAreaId,");sql.setLong("addrAreaId", woArc.getAddrAreaId()); } if (woArc.getFlagAddrLocalNetId() == 1) {sql.append("ADDR_LOCAL_NET_ID=:addrLocalNetId,");sql.setLong("addrLocalNetId", woArc.getAddrLocalNetId()); } if (woArc.getFlagAlarmDate() == 1) {sql.append("ALARM_DATE=:alarmDate,"); sql.setTimestamp("alarmDate", woArc.getAlarmDate()); } if (woArc.getFlagAreaId() == 1) {sql.append("AREA_ID=:areaId,");sql.setLong("areaId", woArc.getAreaId()); } if (woArc.getFlagArFlag() == 1) {sql.append("AR_FLAG=:arFlag,"); sql.setString("arFlag", woArc.getArFlag()); } if (woArc.getFlagAsgnDate() == 1) {sql.append("ASGN_DATE=:asgnDate,"); sql.setTimestamp("asgnDate", woArc.getAsgnDate()); } if (woArc.getFlagAzFlag() == 1) {sql.append("AZ_FLAG=:azFlag,"); sql.setString("azFlag", woArc.getAzFlag()); } if (woArc.getFlagBookedFlag() == 1) {sql.append("BOOKED_FLAG=:bookedFlag,"); sql.setString("bookedFlag", woArc.getBookedFlag()); } if (woArc.getFlagBookFlag() == 1) {sql.append("BOOK_FLAG=:bookFlag,"); sql.setString("bookFlag", woArc.getBookFlag()); } if (woArc.getFlagBranchId() == 1) {sql.append("BRANCH_ID=:branchId,");sql.setLong("branchId", woArc.getBranchId()); } if (woArc.getFlagBusiSts() == 1) {sql.append("BUSI_STS=:busiSts,"); sql.setString("busiSts", woArc.getBusiSts()); } if (woArc.getFlagBusiStsDate() == 1) {sql.append("BUSI_STS_DATE=:busiStsDate,"); sql.setTimestamp("busiStsDate", woArc.getBusiStsDate()); } if (woArc.getFlagCollabWoNbr() == 1) {sql.append("COLLAB_WO_NBR=:collabWoNbr,");sql.setLong("collabWoNbr", woArc.getCollabWoNbr()); } if (woArc.getFlagComplDate() == 1) {sql.append("COMPL_DATE=:complDate,"); sql.setTimestamp("complDate", woArc.getComplDate()); } if (woArc.getFlagDealFlag() == 1) {sql.append("DEAL_FLAG=:dealFlag,"); sql.setString("dealFlag", woArc.getDealFlag()); } if (woArc.getFlagDoTime() == 1) {sql.append("DO_TIME=:doTime,");sql.setLong("doTime", woArc.getDoTime()); } if (woArc.getFlagDynFlag() == 1) {sql.append("DYN_FLAG=:dynFlag,"); sql.setString("dynFlag", woArc.getDynFlag()); } if (woArc.getFlagExchId() == 1) {sql.append("EXCH_ID=:exchId,");sql.setLong("exchId", woArc.getExchId()); } if (woArc.getFlagFailReasonId() == 1) {sql.append("FAIL_REASON_ID=:failReasonId,"); sql.setString("failReasonId", woArc.getFailReasonId()); } if (woArc.getFlagFullFlag() == 1) {sql.append("FULL_FLAG=:fullFlag,"); sql.setString("fullFlag", woArc.getFullFlag()); } if (woArc.getFlagHalt() == 1) {sql.append("HALT=:halt,"); sql.setString("halt", woArc.getHalt()); } if (woArc.getFlagHaltDate() == 1) {sql.append("HALT_DATE=:haltDate,"); sql.setTimestamp("haltDate", woArc.getHaltDate()); } if (woArc.getFlagLocalNetId() == 1) {sql.append("LOCAL_NET_ID=:localNetId,");sql.setLong("localNetId", woArc.getLocalNetId()); } if (woArc.getFlagMaintAreaId() == 1) {sql.append("MAINT_AREA_ID=:maintAreaId,");sql.setLong("maintAreaId", woArc.getMaintAreaId()); } if (woArc.getFlagMainFlag() == 1) {sql.append("MAIN_FLAG=:mainFlag,"); sql.setString("mainFlag", woArc.getMainFlag()); } if (woArc.getFlagMergFlag() == 1) {sql.append("MERG_FLAG=:mergFlag,"); sql.setString("mergFlag", woArc.getMergFlag()); } if (woArc.getFlagMtAreaName() == 1) {sql.append("MT_AREA_NAME=:mtAreaName,"); sql.setString("mtAreaName", woArc.getMtAreaName()); } if (woArc.getFlagNotifyFlag() == 1) {sql.append("NOTIFY_FLAG=:notifyFlag,"); sql.setString("notifyFlag", woArc.getNotifyFlag()); } if (woArc.getFlagNWoNbr() == 1) {sql.append("N_WO_NBR=:nWoNbr,"); sql.setString("nWoNbr", woArc.getNWoNbr()); } if (woArc.getFlagOvertimeId() == 1) {sql.append("OVERTIME_ID=:overtimeId,"); sql.setString("overtimeId", woArc.getOvertimeId()); } if (woArc.getFlagPreAlarmDate() == 1) {sql.append("PRE_ALARM_DATE=:preAlarmDate,"); sql.setTimestamp("preAlarmDate", woArc.getPreAlarmDate()); } if (woArc.getFlagPrintCount() == 1) {sql.append("PRINT_COUNT=:printCount,");sql.setLong("printCount", woArc.getPrintCount()); } if (woArc.getFlagPriority() == 1) {sql.append("PRIORITY=:priority,"); sql.setString("priority", woArc.getPriority()); } if (woArc.getFlagReasgnCount() == 1) {sql.append("REASGN_COUNT=:reasgnCount,");sql.setLong("reasgnCount", woArc.getReasgnCount()); } if (woArc.getFlagRelaWoNbr() == 1) {sql.append("RELA_WO_NBR=:relaWoNbr,");sql.setLong("relaWoNbr", woArc.getRelaWoNbr()); } if (woArc.getFlagRemarks() == 1) {sql.append("REMARKS=:remarks,"); sql.setString("remarks", woArc.getRemarks()); } if (woArc.getFlagRtStaffId() == 1) {sql.append("RT_STAFF_ID=:rtStaffId,");sql.setLong("rtStaffId", woArc.getRtStaffId()); } if (woArc.getFlagRtStaffName() == 1) {sql.append("RT_STAFF_NAME=:rtStaffName,"); sql.setString("rtStaffName", woArc.getRtStaffName()); } if (woArc.getFlagRunSts() == 1) {sql.append("RUN_STS=:runSts,"); sql.setString("runSts", woArc.getRunSts()); } if (woArc.getFlagRunStsDate() == 1) {sql.append("RUN_STS_DATE=:runStsDate,"); sql.setTimestamp("runStsDate", woArc.getRunStsDate()); } if (woArc.getFlagServDeptId() == 1) {sql.append("SERV_DEPT_ID=:servDeptId,");sql.setLong("servDeptId", woArc.getServDeptId()); } if (woArc.getFlagServInstId() == 1) {sql.append("SERV_INST_ID=:servInstId,");sql.setLong("servInstId", woArc.getServInstId()); } if (woArc.getFlagSoNbr() == 1) {sql.append("SO_NBR=:soNbr,"); sql.setString("soNbr", woArc.getSoNbr()); } if (woArc.getFlagStepId() == 1) {sql.append("STEP_ID=:stepId,"); sql.setString("stepId", woArc.getStepId()); } if (woArc.getFlagWorkAreaId() == 1) {sql.append("WORK_AREA_ID=:workAreaId,");sql.setLong("workAreaId", woArc.getWorkAreaId()); } if (woArc.getFlagWorkItemId() == 1) {sql.append("WORK_ITEM_ID=:workItemId,");sql.setLong("workItemId", woArc.getWorkItemId()); } if (woArc.getFlagWorkMode() == 1) {sql.append("WORK_MODE=:workMode,"); sql.setString("workMode", woArc.getWorkMode()); } if (woArc.getFlagWoStaffId() == 1) {sql.append("WO_STAFF_ID=:woStaffId,");sql.setLong("woStaffId", woArc.getWoStaffId()); } if (woArc.getFlagWoStaffName() == 1) {sql.append("WO_STAFF_NAME=:woStaffName,"); sql.setString("woStaffName", woArc.getWoStaffName()); } if (woArc.getFlagWoType() == 1) {sql.append("WO_TYPE=:woType,"); sql.setString("woType", woArc.getWoType()); }            	sql.removeSuffix(1); sql.append(" WHERE 1=1 ");sql.append(" and WO_NBR=:woNbr");sql.setLong("woNbr", woArc.getWoNbr());            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();                    } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(ps);               }                  } /**   * 批量增加记录。   * @return String ： 批量增加的SQL。  */ public void addBat(List list)throws AppException, SysException {     if (list == null) {     throw new AppException("100001", "缺少DAO操作对象！");           }          Connection conn = null;          PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO WO_ARC(ACC_NBR,ACT_TYPE,ADDR_AREA_ID,ADDR_LOCAL_NET_ID,ALARM_DATE,AREA_ID,AR_FLAG,ASGN_DATE,AZ_FLAG,BOOKED_FLAG,BOOK_FLAG,BRANCH_ID,BUSI_STS,BUSI_STS_DATE,COLLAB_WO_NBR,COMPL_DATE,DEAL_FLAG,DO_TIME,DYN_FLAG,EXCH_ID,FAIL_REASON_ID,FULL_FLAG,HALT,HALT_DATE,LOCAL_NET_ID,MAINT_AREA_ID,MAIN_FLAG,MERG_FLAG,MT_AREA_NAME,NOTIFY_FLAG,N_WO_NBR,OVERTIME_ID,PRE_ALARM_DATE,PRINT_COUNT,PRIORITY,REASGN_COUNT,RELA_WO_NBR,REMARKS,RT_STAFF_ID,RT_STAFF_NAME,RUN_STS,RUN_STS_DATE,SERV_DEPT_ID,SERV_INST_ID,SO_NBR,STEP_ID,WORK_AREA_ID,WORK_ITEM_ID,WORK_MODE,WO_NBR,WO_STAFF_ID,WO_STAFF_NAME,WO_TYPE)");sql.append(" VALUES (:accNbr,:actType,:addrAreaId,:addrLocalNetId,:alarmDate,:areaId,:arFlag,:asgnDate,:azFlag,:bookedFlag,:bookFlag,:branchId,:busiSts,:busiStsDate,:collabWoNbr,:complDate,:dealFlag,:doTime,:dynFlag,:exchId,:failReasonId,:fullFlag,:halt,:haltDate,:localNetId,:maintAreaId,:mainFlag,:mergFlag,:mtAreaName,:notifyFlag,:nWoNbr,:overtimeId,:preAlarmDate,:printCount,:priority,:reasgnCount,:relaWoNbr,:remarks,:rtStaffId,:rtStaffName,:runSts,:runStsDate,:servDeptId,:servInstId,:soNbr,:stepId,:workAreaId,:workItemId,:workMode,:woNbr,:woStaffId,:woStaffName,:woType)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());    for(int i=0;i<list.size();i++){       WoArcSVO woArc=(WoArcSVO) list.get(i);         if (woArc== null) {         throw new AppException("100001", "缺少DAO操作对象！");       }    if (StringUtil.isBlank(woArc.getWoNbr())) {       throw new AppException("100002", "缺少对象的主键！");      }      if (StringUtil.isBlank(woArc.getAccNbr())) {      sql.setNullString("accNbr");     } else {    sql.setString("accNbr", woArc.getAccNbr());    }       if (StringUtil.isBlank(woArc.getActType())) {      sql.setNullString("actType");     } else {    sql.setString("actType", woArc.getActType());    }       if (StringUtil.isBlank(woArc.getAddrAreaId())) {      sql.setNullLong("addrAreaId");     } else {    sql.setLong("addrAreaId", woArc.getAddrAreaId());    }       if (StringUtil.isBlank(woArc.getAddrLocalNetId())) {      sql.setNullLong("addrLocalNetId");     } else {    sql.setLong("addrLocalNetId", woArc.getAddrLocalNetId());    }    if (woArc.getAlarmDate() == null) {      sql.setNullDate("alarmDate");     } else {    sql.setTimestamp("alarmDate", woArc.getAlarmDate());    }       if (StringUtil.isBlank(woArc.getAreaId())) {      sql.setNullLong("areaId");     } else {    sql.setLong("areaId", woArc.getAreaId());    }       if (StringUtil.isBlank(woArc.getArFlag())) {      sql.setNullString("arFlag");     } else {    sql.setString("arFlag", woArc.getArFlag());    }    if (woArc.getAsgnDate() == null) {      sql.setNullDate("asgnDate");     } else {    sql.setTimestamp("asgnDate", woArc.getAsgnDate());    }       if (StringUtil.isBlank(woArc.getAzFlag())) {      sql.setNullString("azFlag");     } else {    sql.setString("azFlag", woArc.getAzFlag());    }       if (StringUtil.isBlank(woArc.getBookedFlag())) {      sql.setNullString("bookedFlag");     } else {    sql.setString("bookedFlag", woArc.getBookedFlag());    }       if (StringUtil.isBlank(woArc.getBookFlag())) {      sql.setNullString("bookFlag");     } else {    sql.setString("bookFlag", woArc.getBookFlag());    }       if (StringUtil.isBlank(woArc.getBranchId())) {      sql.setNullLong("branchId");     } else {    sql.setLong("branchId", woArc.getBranchId());    }       if (StringUtil.isBlank(woArc.getBusiSts())) {      sql.setNullString("busiSts");     } else {    sql.setString("busiSts", woArc.getBusiSts());    }    if (woArc.getBusiStsDate() == null) {      sql.setNullDate("busiStsDate");     } else {    sql.setTimestamp("busiStsDate", woArc.getBusiStsDate());    }       if (StringUtil.isBlank(woArc.getCollabWoNbr())) {      sql.setNullLong("collabWoNbr");     } else {    sql.setLong("collabWoNbr", woArc.getCollabWoNbr());    }    if (woArc.getComplDate() == null) {      sql.setNullDate("complDate");     } else {    sql.setTimestamp("complDate", woArc.getComplDate());    }       if (StringUtil.isBlank(woArc.getDealFlag())) {      sql.setNullString("dealFlag");     } else {    sql.setString("dealFlag", woArc.getDealFlag());    }       if (StringUtil.isBlank(woArc.getDoTime())) {      sql.setNullLong("doTime");     } else {    sql.setLong("doTime", woArc.getDoTime());    }       if (StringUtil.isBlank(woArc.getDynFlag())) {      sql.setNullString("dynFlag");     } else {    sql.setString("dynFlag", woArc.getDynFlag());    }       if (StringUtil.isBlank(woArc.getExchId())) {      sql.setNullLong("exchId");     } else {    sql.setLong("exchId", woArc.getExchId());    }       if (StringUtil.isBlank(woArc.getFailReasonId())) {      sql.setNullString("failReasonId");     } else {    sql.setString("failReasonId", woArc.getFailReasonId());    }       if (StringUtil.isBlank(woArc.getFullFlag())) {      sql.setNullString("fullFlag");     } else {    sql.setString("fullFlag", woArc.getFullFlag());    }       if (StringUtil.isBlank(woArc.getHalt())) {      sql.setNullString("halt");     } else {    sql.setString("halt", woArc.getHalt());    }    if (woArc.getHaltDate() == null) {      sql.setNullDate("haltDate");     } else {    sql.setTimestamp("haltDate", woArc.getHaltDate());    }       if (StringUtil.isBlank(woArc.getLocalNetId())) {      sql.setNullLong("localNetId");     } else {    sql.setLong("localNetId", woArc.getLocalNetId());    }       if (StringUtil.isBlank(woArc.getMaintAreaId())) {      sql.setNullLong("maintAreaId");     } else {    sql.setLong("maintAreaId", woArc.getMaintAreaId());    }       if (StringUtil.isBlank(woArc.getMainFlag())) {      sql.setNullString("mainFlag");     } else {    sql.setString("mainFlag", woArc.getMainFlag());    }       if (StringUtil.isBlank(woArc.getMergFlag())) {      sql.setNullString("mergFlag");     } else {    sql.setString("mergFlag", woArc.getMergFlag());    }       if (StringUtil.isBlank(woArc.getMtAreaName())) {      sql.setNullString("mtAreaName");     } else {    sql.setString("mtAreaName", woArc.getMtAreaName());    }       if (StringUtil.isBlank(woArc.getNotifyFlag())) {      sql.setNullString("notifyFlag");     } else {    sql.setString("notifyFlag", woArc.getNotifyFlag());    }       if (StringUtil.isBlank(woArc.getNWoNbr())) {      sql.setNullString("nWoNbr");     } else {    sql.setString("nWoNbr", woArc.getNWoNbr());    }       if (StringUtil.isBlank(woArc.getOvertimeId())) {      sql.setNullString("overtimeId");     } else {    sql.setString("overtimeId", woArc.getOvertimeId());    }    if (woArc.getPreAlarmDate() == null) {      sql.setNullDate("preAlarmDate");     } else {    sql.setTimestamp("preAlarmDate", woArc.getPreAlarmDate());    }       if (StringUtil.isBlank(woArc.getPrintCount())) {      sql.setNullLong("printCount");     } else {    sql.setLong("printCount", woArc.getPrintCount());    }       if (StringUtil.isBlank(woArc.getPriority())) {      sql.setNullString("priority");     } else {    sql.setString("priority", woArc.getPriority());    }       if (StringUtil.isBlank(woArc.getReasgnCount())) {      sql.setNullLong("reasgnCount");     } else {    sql.setLong("reasgnCount", woArc.getReasgnCount());    }       if (StringUtil.isBlank(woArc.getRelaWoNbr())) {      sql.setNullLong("relaWoNbr");     } else {    sql.setLong("relaWoNbr", woArc.getRelaWoNbr());    }       if (StringUtil.isBlank(woArc.getRemarks())) {      sql.setNullString("remarks");     } else {    sql.setString("remarks", woArc.getRemarks());    }       if (StringUtil.isBlank(woArc.getRtStaffId())) {      sql.setNullLong("rtStaffId");     } else {    sql.setLong("rtStaffId", woArc.getRtStaffId());    }       if (StringUtil.isBlank(woArc.getRtStaffName())) {      sql.setNullString("rtStaffName");     } else {    sql.setString("rtStaffName", woArc.getRtStaffName());    }       if (StringUtil.isBlank(woArc.getRunSts())) {      sql.setNullString("runSts");     } else {    sql.setString("runSts", woArc.getRunSts());    }    if (woArc.getRunStsDate() == null) {      sql.setNullDate("runStsDate");     } else {    sql.setTimestamp("runStsDate", woArc.getRunStsDate());    }       if (StringUtil.isBlank(woArc.getServDeptId())) {      sql.setNullLong("servDeptId");     } else {    sql.setLong("servDeptId", woArc.getServDeptId());    }       if (StringUtil.isBlank(woArc.getServInstId())) {      sql.setNullLong("servInstId");     } else {    sql.setLong("servInstId", woArc.getServInstId());    }       if (StringUtil.isBlank(woArc.getSoNbr())) {      sql.setNullString("soNbr");     } else {    sql.setString("soNbr", woArc.getSoNbr());    }       if (StringUtil.isBlank(woArc.getStepId())) {      sql.setNullString("stepId");     } else {    sql.setString("stepId", woArc.getStepId());    }       if (StringUtil.isBlank(woArc.getWorkAreaId())) {      sql.setNullLong("workAreaId");     } else {    sql.setLong("workAreaId", woArc.getWorkAreaId());    }       if (StringUtil.isBlank(woArc.getWorkItemId())) {      sql.setNullLong("workItemId");     } else {    sql.setLong("workItemId", woArc.getWorkItemId());    }       if (StringUtil.isBlank(woArc.getWorkMode())) {      sql.setNullString("workMode");     } else {    sql.setString("workMode", woArc.getWorkMode());    }       if (StringUtil.isBlank(woArc.getWoNbr())) {      sql.setNullLong("woNbr");     } else {    sql.setLong("woNbr", woArc.getWoNbr());    }       if (StringUtil.isBlank(woArc.getWoStaffId())) {      sql.setNullLong("woStaffId");     } else {    sql.setLong("woStaffId", woArc.getWoStaffId());    }       if (StringUtil.isBlank(woArc.getWoStaffName())) {      sql.setNullString("woStaffName");     } else {    sql.setString("woStaffName", woArc.getWoStaffName());    }       if (StringUtil.isBlank(woArc.getWoType())) {      sql.setNullString("woType");     } else {    sql.setString("woType", woArc.getWoType());    }            sql.fillParams(ps);           sql.log(this.getClass());           sql.clearParameters();           ps.addBatch();           }                  ps.executeBatch();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 根据传入参数删除一条或者一批记录。   * @return String ： 删除的SQL。  */ public void delete(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     WoArcSVO woArc=(WoArcSVO) vo;    if (StringUtil.isBlank(woArc.getWoNbr())) {       throw new AppException("100002", "缺少对象的主键！");      }          Connection conn = null;          PreparedStatement ps = null;       Sql sql = new Sql("DELETE FROM WO_ARC WHERE 1=1  ");sql.append(" and WO_NBR=:woNbr");sql.setLong("woNbr", woArc.getWoNbr());       try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();            } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(ps);           }         } /**   * 注销一条或者一批   * @return String ： 注销一条或者一批的SQL。  */ public void unable(GenericVO vo)throws AppException, SysException {     WoArcSVO woArc=(WoArcSVO) vo;       }}
