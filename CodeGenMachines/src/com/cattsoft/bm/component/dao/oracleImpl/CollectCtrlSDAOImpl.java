package com.cattsoft.bm.component.dao.oracleImpl;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import java.util.ArrayList;import org.apache.log4j.Logger;import com.cattsoft.pub.connection.ConnectionFactory;import com.cattsoft.bm.component.dao.ICollectCtrlSDAO;import com.cattsoft.bm.vo.CollectCtrlSVO;import com.cattsoft.pub.util.JdbcUtil;import com.cattsoft.pub.dao.Sql;import com.cattsoft.pub.exception.AppException;import com.cattsoft.pub.exception.SysException;import com.cattsoft.pub.vo.GenericVO;import com.cattsoft.pub.util.StringUtil; /**   * 方法CollectCtrlSDAOImpl   * <p>Company: 大唐软件</p>   * @author ：白小亮。   * @version 1.1  2007-9-23  */public class CollectCtrlSDAOImpl implements ICollectCtrlSDAO{    private static Logger log = Logger.getLogger(CollectCtrlSDAOImpl.class);    private static final String UNABLE_STS = "P";  /**   * 增加。   * @return String  */ public void add(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     CollectCtrlSVO collectCtrl=(CollectCtrlSVO) vo;    if (StringUtil.isBlank(collectCtrl.getCollectCtrlId())) {       throw new AppException("100002", "缺少对象的主键！");      }      Connection conn = null;      PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO COLLECT_CTRL(CHECK_RULE_ID,COLLECT_CTRL_ID,COLLECT_DATE,DAY,MONTH,QUARTER,WEEK,YEAR)");sql.append(" VALUES (:checkRuleId,:collectCtrlId,:collectDate,:day,:month,:quarter,:week,:year)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());      if (StringUtil.isBlank(collectCtrl.getCheckRuleId())) {      sql.setNullLong("checkRuleId");     } else {    sql.setLong("checkRuleId", collectCtrl.getCheckRuleId());    }       if (StringUtil.isBlank(collectCtrl.getCollectCtrlId())) {      sql.setNullLong("collectCtrlId");     } else {    sql.setLong("collectCtrlId", collectCtrl.getCollectCtrlId());    }    if (collectCtrl.getCollectDate() == null) {      sql.setNullDate("collectDate");     } else {    sql.setTimestamp("collectDate", collectCtrl.getCollectDate());    }       if (StringUtil.isBlank(collectCtrl.getDay())) {      sql.setNullLong("day");     } else {    sql.setLong("day", collectCtrl.getDay());    }       if (StringUtil.isBlank(collectCtrl.getMonth())) {      sql.setNullLong("month");     } else {    sql.setLong("month", collectCtrl.getMonth());    }       if (StringUtil.isBlank(collectCtrl.getQuarter())) {      sql.setNullLong("quarter");     } else {    sql.setLong("quarter", collectCtrl.getQuarter());    }       if (StringUtil.isBlank(collectCtrl.getWeek())) {      sql.setNullLong("week");     } else {    sql.setLong("week", collectCtrl.getWeek());    }       if (StringUtil.isBlank(collectCtrl.getYear())) {      sql.setNullLong("year");     } else {    sql.setLong("year", collectCtrl.getYear());    }            sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 主键查询的SQL。   * @return String ： 主键查询的SQL。  */ public GenericVO findByPK(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     CollectCtrlSVO collectCtrl=(CollectCtrlSVO) vo;    if (StringUtil.isBlank(collectCtrl.getCollectCtrlId())) {       throw new AppException("100002", "缺少对象的主键！");      }       Sql sql = new Sql("SELECT CHECK_RULE_ID,COLLECT_CTRL_ID,COLLECT_DATE,DAY,MONTH,QUARTER,WEEK,YEAR FROM COLLECT_CTRL WHERE 1=1  ");sql.append(" and COLLECT_CTRL_ID=:collectCtrlId");sql.setLong("collectCtrlId", collectCtrl.getCollectCtrlId());       Connection conn = null;      PreparedStatement ps = null;      ResultSet rs = null;      collectCtrl =null;      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();            while (rs.next()) {           collectCtrl = new CollectCtrlSVO();           collectCtrl.setCheckRuleId(rs.getString("CHECK_RULE_ID"));           collectCtrl.setCollectCtrlId(rs.getString("COLLECT_CTRL_ID"));           collectCtrl.setCollectDate(rs.getTimestamp("COLLECT_DATE"));           collectCtrl.setDay(rs.getString("DAY"));           collectCtrl.setMonth(rs.getString("MONTH"));           collectCtrl.setQuarter(rs.getString("QUARTER"));           collectCtrl.setWeek(rs.getString("WEEK"));           collectCtrl.setYear(rs.getString("YEAR"));                 }           } catch (SQLException se) {             throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(rs,ps);           }           return collectCtrl;         } /**   * 批量查询的SQL。   * @return String ： 批量查询的SQL。  */ public List findByVO(GenericVO vo) throws AppException, SysException{         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       CollectCtrlSVO collectCtrl=(CollectCtrlSVO) vo;          List res = new ArrayList();          Connection conn = null;          PreparedStatement ps = null;          ResultSet rs = null;          Sql sql = new Sql("SELECT CHECK_RULE_ID,COLLECT_CTRL_ID,COLLECT_DATE,DAY,MONTH,QUARTER,WEEK,YEAR FROM COLLECT_CTRL WHERE 1=1 ");     try {if (collectCtrl.getFlagCheckRuleId() == 1) {      if (StringUtil.isBlank(collectCtrl.getCheckRuleId())) {             sql.append(" and CHECK_RULE_ID is null ");          }      else{             sql.append(" and CHECK_RULE_ID=:checkRuleId");             sql.setLong("checkRuleId", collectCtrl.getCheckRuleId());          }   } if (collectCtrl.getFlagCollectCtrlId() == 1) {      if (StringUtil.isBlank(collectCtrl.getCollectCtrlId())) {             sql.append(" and COLLECT_CTRL_ID is null ");          }      else{             sql.append(" and COLLECT_CTRL_ID=:collectCtrlId");             sql.setLong("collectCtrlId", collectCtrl.getCollectCtrlId());          }   } if (collectCtrl.getFlagCollectDate() == 1) {      if (collectCtrl.getCollectDate() == null) {             sql.append(" and COLLECT_DATE is null ");          }      else{             sql.append(" and COLLECT_DATE=:collectDate");             sql.setTimestamp("collectDate", collectCtrl.getCollectDate());          }   } if (collectCtrl.getFlagDay() == 1) {      if (StringUtil.isBlank(collectCtrl.getDay())) {             sql.append(" and DAY is null ");          }      else{             sql.append(" and DAY=:day");             sql.setLong("day", collectCtrl.getDay());          }   } if (collectCtrl.getFlagMonth() == 1) {      if (StringUtil.isBlank(collectCtrl.getMonth())) {             sql.append(" and MONTH is null ");          }      else{             sql.append(" and MONTH=:month");             sql.setLong("month", collectCtrl.getMonth());          }   } if (collectCtrl.getFlagQuarter() == 1) {      if (StringUtil.isBlank(collectCtrl.getQuarter())) {             sql.append(" and QUARTER is null ");          }      else{             sql.append(" and QUARTER=:quarter");             sql.setLong("quarter", collectCtrl.getQuarter());          }   } if (collectCtrl.getFlagWeek() == 1) {      if (StringUtil.isBlank(collectCtrl.getWeek())) {             sql.append(" and WEEK is null ");          }      else{             sql.append(" and WEEK=:week");             sql.setLong("week", collectCtrl.getWeek());          }   } if (collectCtrl.getFlagYear() == 1) {      if (StringUtil.isBlank(collectCtrl.getYear())) {             sql.append(" and YEAR is null ");          }      else{             sql.append(" and YEAR=:year");             sql.setLong("year", collectCtrl.getYear());          }   }            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();                    while (rs.next()) {           collectCtrl = new CollectCtrlSVO();           collectCtrl.setCheckRuleId(rs.getString("CHECK_RULE_ID"));           collectCtrl.setCollectCtrlId(rs.getString("COLLECT_CTRL_ID"));           collectCtrl.setCollectDate(rs.getTimestamp("COLLECT_DATE"));           collectCtrl.setDay(rs.getString("DAY"));           collectCtrl.setMonth(rs.getString("MONTH"));           collectCtrl.setQuarter(rs.getString("QUARTER"));           collectCtrl.setWeek(rs.getString("WEEK"));           collectCtrl.setYear(rs.getString("YEAR"));               res.add(collectCtrl);                            }          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(rs,ps);               }                         if(0 == res.size()) res = null;          return res;   } /**   * 更新的SQL。   * @return String ： 更新的SQL。  */ public void update(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       CollectCtrlSVO collectCtrl=(CollectCtrlSVO) vo;    if (StringUtil.isBlank(collectCtrl.getCollectCtrlId())) {       throw new AppException("100002", "缺少对象的主键！");      }          Connection conn = null;          PreparedStatement ps = null;          Sql sql = new Sql("UPDATE COLLECT_CTRL SET ");     try {if (collectCtrl.getFlagCheckRuleId() == 1) {sql.append("CHECK_RULE_ID=:checkRuleId,");sql.setLong("checkRuleId", collectCtrl.getCheckRuleId()); } if (collectCtrl.getFlagCollectDate() == 1) {sql.append("COLLECT_DATE=:collectDate,"); sql.setTimestamp("collectDate", collectCtrl.getCollectDate()); } if (collectCtrl.getFlagDay() == 1) {sql.append("DAY=:day,");sql.setLong("day", collectCtrl.getDay()); } if (collectCtrl.getFlagMonth() == 1) {sql.append("MONTH=:month,");sql.setLong("month", collectCtrl.getMonth()); } if (collectCtrl.getFlagQuarter() == 1) {sql.append("QUARTER=:quarter,");sql.setLong("quarter", collectCtrl.getQuarter()); } if (collectCtrl.getFlagWeek() == 1) {sql.append("WEEK=:week,");sql.setLong("week", collectCtrl.getWeek()); } if (collectCtrl.getFlagYear() == 1) {sql.append("YEAR=:year,");sql.setLong("year", collectCtrl.getYear()); }            	sql.removeSuffix(1); sql.append(" WHERE 1=1 ");sql.append(" and COLLECT_CTRL_ID=:collectCtrlId");sql.setLong("collectCtrlId", collectCtrl.getCollectCtrlId());            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();                    } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(ps);               }                  } /**   * 批量增加记录。   * @return String ： 批量增加的SQL。  */ public void addBat(List list)throws AppException, SysException {     if (list == null) {     throw new AppException("100001", "缺少DAO操作对象！");           }          Connection conn = null;          PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO COLLECT_CTRL(CHECK_RULE_ID,COLLECT_CTRL_ID,COLLECT_DATE,DAY,MONTH,QUARTER,WEEK,YEAR)");sql.append(" VALUES (:checkRuleId,:collectCtrlId,:collectDate,:day,:month,:quarter,:week,:year)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());    for(int i=0;i<list.size();i++){       CollectCtrlSVO collectCtrl=(CollectCtrlSVO) list.get(i);         if (collectCtrl== null) {         throw new AppException("100001", "缺少DAO操作对象！");       }    if (StringUtil.isBlank(collectCtrl.getCollectCtrlId())) {       throw new AppException("100002", "缺少对象的主键！");      }      if (StringUtil.isBlank(collectCtrl.getCheckRuleId())) {      sql.setNullLong("checkRuleId");     } else {    sql.setLong("checkRuleId", collectCtrl.getCheckRuleId());    }       if (StringUtil.isBlank(collectCtrl.getCollectCtrlId())) {      sql.setNullLong("collectCtrlId");     } else {    sql.setLong("collectCtrlId", collectCtrl.getCollectCtrlId());    }    if (collectCtrl.getCollectDate() == null) {      sql.setNullDate("collectDate");     } else {    sql.setTimestamp("collectDate", collectCtrl.getCollectDate());    }       if (StringUtil.isBlank(collectCtrl.getDay())) {      sql.setNullLong("day");     } else {    sql.setLong("day", collectCtrl.getDay());    }       if (StringUtil.isBlank(collectCtrl.getMonth())) {      sql.setNullLong("month");     } else {    sql.setLong("month", collectCtrl.getMonth());    }       if (StringUtil.isBlank(collectCtrl.getQuarter())) {      sql.setNullLong("quarter");     } else {    sql.setLong("quarter", collectCtrl.getQuarter());    }       if (StringUtil.isBlank(collectCtrl.getWeek())) {      sql.setNullLong("week");     } else {    sql.setLong("week", collectCtrl.getWeek());    }       if (StringUtil.isBlank(collectCtrl.getYear())) {      sql.setNullLong("year");     } else {    sql.setLong("year", collectCtrl.getYear());    }            sql.fillParams(ps);           sql.log(this.getClass());           sql.clearParameters();           ps.addBatch();           }                  ps.executeBatch();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 根据传入参数删除一条或者一批记录。   * @return String ： 删除的SQL。  */ public void delete(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     CollectCtrlSVO collectCtrl=(CollectCtrlSVO) vo;    if (StringUtil.isBlank(collectCtrl.getCollectCtrlId())) {       throw new AppException("100002", "缺少对象的主键！");      }          Connection conn = null;          PreparedStatement ps = null;       Sql sql = new Sql("DELETE FROM COLLECT_CTRL WHERE 1=1  ");sql.append(" and COLLECT_CTRL_ID=:collectCtrlId");sql.setLong("collectCtrlId", collectCtrl.getCollectCtrlId());       try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();            } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(ps);           }         } /**   * 注销一条或者一批   * @return String ： 注销一条或者一批的SQL。  */ public void unable(GenericVO vo)throws AppException, SysException {     CollectCtrlSVO collectCtrl=(CollectCtrlSVO) vo;       }}
